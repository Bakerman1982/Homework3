[
  {
    "objectID": "HW03.html",
    "href": "HW03.html",
    "title": "Homework 03 – The Tidyverse",
    "section": "",
    "text": "library(tidyverse)\nlibrary(DBI)\nlibrary(RSQLite)"
  },
  {
    "objectID": "HW03.html#task-1-conceptual-questions",
    "href": "HW03.html#task-1-conceptual-questions",
    "title": "Homework 03 – The Tidyverse",
    "section": "Task #1: Conceptual Questions",
    "text": "Task #1: Conceptual Questions\n1. If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\nYou could go up one level using cd.. in terminal. If you are trying to read in data using a function that reads .csv files, I would use:\n\nread_csv(\"../MyData.csv\")\n\n2. What are the major benefits of using R projects?\nUsing the R Project feature is excellent for keeping your work together both within the file and within a working directory. Sharing your project and uploading it to a version control HUB like GitHub makes collaboration effortless.\n3. What is git and what is github?\nGit is software that manages version control. Github is a cloud service that hosts repositories to store your work.\n4. What are the two main differences between a tibble and a data.frame?\nA tibble has updated printing output that only shows the first few rows along with some small tibble summary data like row counts. A tibble also has defined parameters concerning subsetting and its strength is alerting you of problems at the beginning of the subsetting actions which prevent errors when running functions on that tibble downstream. When subsetting, tibbles do not coerce to vectorization for a single column.\n5. Rewrite the following nested function call using baseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\nas_tibble(iris) %&gt;%\n  sslect(starts_with(\"Petal\"), Species) %&gt;%\n  filter(Petal.Length) %&gt;%\n  arrange(Species)\n\n6. What is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\nThe different formats describe the rectangular structure of the data. In Long format, we end up with a table, tibble or dataframe that contains less columns and more rows. This is the preferred method for statistical analysis. Setting filtering parameters on column data is easy to execute than wide format. We can also use long data formatting in more programs outside of R. With Wide Format, we have fewer rows and more columns. Wide format is useful in displaying data."
  },
  {
    "objectID": "HW03.html#task-2-reading-delimited-data",
    "href": "HW03.html#task-2-reading-delimited-data",
    "title": "Homework 03 – The Tidyverse",
    "section": "Task #2: Reading Delimited Data",
    "text": "Task #2: Reading Delimited Data\n\nGlass Data\n1. Read this data into R directly from the URL using functions from the tidyverse. Print out the tibble (just call the object name).\nFrom URL (not evaluated)\n\nglass &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\",\n  col_names = c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"Type_of_glass\"))\nglass_tbl &lt;- as_tibble(glass)\n\nFrom File (evaluated)\n\nglass &lt;- read_csv(\"../Glassdata/glass.data\",\ncol_names = c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"Type_of_glass\"))\nglass_tbl &lt;- as_tibble(glass);glass_tbl;\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n2. Start a chain that would overwrite the Type_of_glass variable using mutate().\n\nglass_tbl &lt;- glass_tbl |&gt;\n  mutate(Type_of_glass = case_when(\n      Type_of_glass == 1 ~ 'building_windows_float_processed',\n      Type_of_glass == 2 ~ 'building_windows_non_float_processed',\n      Type_of_glass == 3 ~ 'vehicle_windows_float_processed',\n      Type_of_glass == 4 ~ 'vehicle_windows_non_float_processed (non in this database)',\n      Type_of_glass == 5 ~ 'containers',\n      Type_of_glass == 6 ~ 'tableware',\n      Type_of_glass == 7 ~ 'headlamps'))\nglass_tbl\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\n\n3. Continue your chain and keep only observations where the Fe variable is less than 0.2 and the Type of Glass is either “tableware” or “headlamp”. \n\nglass_tbl &lt;- glass_tbl |&gt; filter(Fe &lt; 0.2 & (Type_of_glass == \"tableware\" | Type_of_glass == \"headlamps\"))\nglass_tbl\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\n\nYeast Data\n\n1. Read this data into R directly from the URL using functions from the tidyverse. Notice that the data doesn’t include column names- add those (in a manner of your choosing). Print out the tibble (just call the object name).\nFrom URL (not evaluated)\n\n\nyeast &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n  col_names = c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"))\nyeast_tbl &lt;- as_tibble(yeast)\n\nFrom File (evaluated)\n\n\nyeast &lt;- read_table(\"../Yeast/yeast.data\",\n                  col_names = c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\"));\nyeast_tbl &lt;- as_tibble(yeast);\nyeast_tbl;\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n2. Start a chain that removes the seq_name and nuc columns.\n\nyeast_tbl &lt;- yeast_tbl |&gt; mutate(seq_name = NULL, nuc = NULL); yeast_tbl\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n3. Continue your chain to add columns corresponding to the mean and median of each numeric variable (mcg, gvh, alm, mit, erl, pox, and vac) at each class grouping (see the across() function as we did in the dplyr video!) \n\nyeast_tbl &lt;- yeast_tbl |&gt; group_by(class) |&gt; mutate(across(where(is.numeric), mean, .names = \"mean_{.col}\"),across(where(is.numeric), median, .names = \"median_{.col}\")); yeast_tbl\n\n# A tibble: 1,484 × 29\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mean_mcg mean_gvh mean_alm\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521    0.533    0.517\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521    0.533    0.517\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521    0.533    0.517\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452    0.456    0.529\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521    0.533    0.517\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481    0.470    0.535\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521    0.533    0.517\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452    0.456    0.529\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521    0.533    0.517\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481    0.470    0.535\n# ℹ 1,474 more rows\n# ℹ 18 more variables: mean_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, mean_pox &lt;dbl&gt;,\n#   mean_vac &lt;dbl&gt;, median_mcg &lt;dbl&gt;, median_gvh &lt;dbl&gt;, median_alm &lt;dbl&gt;,\n#   median_mit &lt;dbl&gt;, median_erl &lt;dbl&gt;, median_pox &lt;dbl&gt;, median_vac &lt;dbl&gt;,\n#   median_mean_mcg &lt;dbl&gt;, median_mean_gvh &lt;dbl&gt;, median_mean_alm &lt;dbl&gt;,\n#   median_mean_mit &lt;dbl&gt;, median_mean_erl &lt;dbl&gt;, median_mean_pox &lt;dbl&gt;,\n#   median_mean_vac &lt;dbl&gt;"
  },
  {
    "objectID": "HW03.html#task-3-combining-excel-and-delimited-data",
    "href": "HW03.html#task-3-combining-excel-and-delimited-data",
    "title": "Homework 03 – The Tidyverse",
    "section": "Task #3: Combining Excel and Delimited Data",
    "text": "Task #3: Combining Excel and Delimited Data\n\n1. There is an excel version of the white wine data set available at https://www4.stat.ncsu.edu/~online/ datasets/white-wine.xlsx. \n• Download this file \n• Place it in a folder you know (such as your working directory for your project) \n• Import the data from the first sheet using the readxl package \n• Print out the tibble (just call the object name) \n\n\nwhitewine &lt;- read_delim(\"../WineQuality/winequality-white.csv\", delim = \";\")\nwhitewine &lt;- as_tibble(whitewine)\nwhitewine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7                 0.27          0.36             20.7     0.045\n 2             6.3               0.3           0.34              1.6     0.049\n 3             8.1               0.28          0.4               6.9     0.05 \n 4             7.2               0.23          0.32              8.5     0.058\n 5             7.2               0.23          0.32              8.5     0.058\n 6             8.1               0.28          0.4               6.9     0.05 \n 7             6.2               0.32          0.16              7       0.045\n 8             7                 0.27          0.36             20.7     0.045\n 9             6.3               0.3           0.34              1.6     0.049\n10             8.1               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n2.  • Readin the data from the 2nd sheet. This should return a data frame with one column containing alternative versions of the variable names. \n• Grab that column and overwrite the current column names (colnames()) of your white wine tibble. \n\n\n #\"Reading Excel Data\"\n\ncol_names &lt;- c(\"fixed acidity\",\"volatile acidity\",\"citric acid\",\"residuall sugar\",\"chlorides\",\"free sulfure dioxide\",\"total sulfur dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality\")\ncolnames(whitewine) &lt;- col_names\n\n3. Lastly, add a column to this data set to indicate the wines are white. That is, add a column that has values of ‘white’ for every observation.\n\n\nwhitewine &lt;- whitewine |&gt; mutate(\"wine color\" = \"White\")\n\n4. There is a semi-colon delimited version of the red wine data set available at https://www4.stat.ncsu. edu/~online/datasets/red-wine.csv.\n• Readthis in using the readr package. Be careful that the columns are read in as the correct type!\n• You should replace the variable names as done above\n• You should append a column denoting the type as “red”\n\n\nredwine &lt;- read_delim(\"../WineQuality/winequality-red.csv\", delim = \";\")\ncol_names &lt;- c(\"fixed acidity\",\"volatile acidity\",\"citric acid\",\"residuall sugar\",\"chlorides\",\"free sulfure dioxide\",\"total sulfur dioxide\",\"density\",\"pH\",\"sulphates\",\"alcohol\",\"quality\")\nredwine &lt;- as_tibble(redwine)\ncolnames(redwine) = col_names\nredwine &lt;- redwine |&gt; mutate(\"wine color\" = \"Red\")\nredwine\n\n# A tibble: 1,599 × 13\n   `fixed acidity` `volatile acidity` `citric acid` `residuall sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4               0.7           0                  1.9     0.076\n 2             7.8               0.88          0                  2.6     0.098\n 3             7.8               0.76          0.04               2.3     0.092\n 4            11.2               0.28          0.56               1.9     0.075\n 5             7.4               0.7           0                  1.9     0.076\n 6             7.4               0.66          0                  1.8     0.075\n 7             7.9               0.6           0.06               1.6     0.069\n 8             7.3               0.65          0                  1.2     0.065\n 9             7.8               0.58          0.02               2       0.073\n10             7.5               0.5           0.36               6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: `free sulfure dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;, `wine color` &lt;chr&gt;\n\n\n5. Combine these two data sets into one data set. They both have the exact same columns so this is an easy append task!\n• Use the dplyr::bind_rows() function (see the help) to create one tibble containing all of the wine data.\n\n\ncomb_wines &lt;- bind_rows(whitewine, redwine)\n\n#also worked\n#full_join(whitewine, redwine)\n\n6. Start a chain onr your new combined data object to filter the data to only look at high-quality wines(quality &gt; 6.5) and wines that have a reasonable alcohol value (alcohol &lt; 132).\n\ncomb_wines |&gt; filter(quality &gt; 6.5 & alcohol &lt; 132)\n\n# A tibble: 1,277 × 13\n   `fixed acidity` `volatile acidity` `citric acid` `residuall sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;     &lt;dbl&gt;\n 1             6.6               0.16          0.4                1.5     0.044\n 2             6.6               0.17          0.38               1.5     0.032\n 3             6.2               0.66          0.48               1.2     0.029\n 4             6.2               0.66          0.48               1.2     0.029\n 5             6.4               0.31          0.38               2.9     0.038\n 6             6.8               0.26          0.42               1.7     0.049\n 7             7.2               0.32          0.36               2       0.033\n 8             7.4               0.18          0.31               1.4     0.058\n 9             6.6               0.25          0.29               1.1     0.068\n10             6.2               0.16          0.33               1.1     0.057\n# ℹ 1,267 more rows\n# ℹ 8 more variables: `free sulfure dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;, `wine color` &lt;chr&gt;\n\n\n7. Continue your chain to now sort the data from highest quality to lowest.\n\n\ncomb_wines &lt;- comb_wines |&gt; filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt; arrange(quality, decreasing = TRUE)\n\n8. Continue your chain to select only the variables that contain acid, the alcohol variable, the type variable, and the quality variable.\n\n\ncomb_wines &lt;- comb_wines |&gt; select(`citric acid`, alcohol, `wine color`, quality) |&gt; filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt; arrange(quality, decreasing = TRUE)\n\n9. Continue your chain to add the mean and standard deviation of the alcohol variable to the data set for each setting of the quality variable.\n\n\ncomb_wines &lt;- comb_wines |&gt; select(`citric acid`, alcohol, `wine color`, quality) |&gt; filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt; arrange(quality, decreasing = TRUE) |&gt; group_by(quality) |&gt; mutate(`mean_alc` = mean(alcohol), `sd_alc` = sd(alcohol))"
  },
  {
    "objectID": "HW03.html#task-4-database-practice",
    "href": "HW03.html#task-4-database-practice",
    "title": "Homework 03 – The Tidyverse",
    "section": "Task #4: Database Practice",
    "text": "Task #4: Database Practice\n\n1. Connect to the database and then look at all of the tables in the database.\n\n\ncon &lt;- DBI::dbConnect(RSQLite::SQLite(), dbname = \"lahman.db\")\ncon\n\n&lt;SQLiteConnection&gt;\n  Path: A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db\n  Extensions: TRUE\n\nDBI::dbListTables(con)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\ntbl(con, \"Teams\")\n\n# Source:   table&lt;`Teams`&gt; [?? x 48]\n# Database: sqlite 3.46.0 [A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   1871 NA    BS1    BNA      &lt;NA&gt;      3    31    NA    20    10 &lt;NA&gt;   &lt;NA&gt; \n 2   1871 NA    CH1    CNA      &lt;NA&gt;      2    28    NA    19     9 &lt;NA&gt;   &lt;NA&gt; \n 3   1871 NA    CL1    CFC      &lt;NA&gt;      8    29    NA    10    19 &lt;NA&gt;   &lt;NA&gt; \n 4   1871 NA    FW1    KEK      &lt;NA&gt;      7    19    NA     7    12 &lt;NA&gt;   &lt;NA&gt; \n 5   1871 NA    NY2    NNA      &lt;NA&gt;      5    33    NA    16    17 &lt;NA&gt;   &lt;NA&gt; \n 6   1871 NA    PH1    PNA      &lt;NA&gt;      1    28    NA    21     7 &lt;NA&gt;   &lt;NA&gt; \n 7   1871 NA    RC1    ROK      &lt;NA&gt;      9    25    NA     4    21 &lt;NA&gt;   &lt;NA&gt; \n 8   1871 NA    TRO    TRO      &lt;NA&gt;      6    29    NA    13    15 &lt;NA&gt;   &lt;NA&gt; \n 9   1871 NA    WS3    OLY      &lt;NA&gt;      4    32    NA    15    15 &lt;NA&gt;   &lt;NA&gt; \n10   1872 NA    BL1    BLC      &lt;NA&gt;      2    58    NA    35    19 &lt;NA&gt;   &lt;NA&gt; \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n2. Use the tbl() function and dplyr to return all of the data from the Teams table for the year 2015.\n\n\nteam_tbl2 &lt;- tbl(con, \"Teams\") |&gt; filter(yearID == 2015);team_tbl2;\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.46.0 [A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n3. Repeat the above by using the sql() function within tbl() (here you have to write actual SQL!). Either use dplyr or write SQL queries for the rest of these questions!\n\n\nteam_tbl3 &lt;- tbl(con, sql(\"SELECT * FROM `Teams` WHERE 1=1 AND (yearid == 2015)\"));team_tbl3;\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.46.0 [A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n4. Return all of the players in the hall of fame, the year they were voted into the hall of fame, and their category (only those three variables!). See the HallOfFame table, the inducted variable is important here.\n\n\ntbl(con, sql(\"SELECT playerID, yearID, category from `HallOfFame` where 1=1 and inducted = 'Y'\"))\n\n# Source:   SQL [?? x 3]\n# Database: sqlite 3.46.0 [A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db]\n   playerID  yearID category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ more rows\n\n\n5. Combine the table from the previous question with the People table in order to have the nameFirst and nameLast names added to what was returned above.\n\n\nMyHOFData &lt;- tbl(con, sql(\"\nSELECT \n  P.nameLast as Last_Name,\n  P.nameFirst as First_Name, \n  HF.playerID as PlayerID,\n  HF.yearID as YearID, \n  HF.category as Category\nfrom People as P\njoin HallOfFame as HF on P.playerID = HF.playerID\n  where 1=1 and inducted = 'Y'\"))\n\n6. Return only the playerID (manager ID in this case), G, W, and L columns from the Managers table. Use chaining to then:\n• Determine the overall win/loss records (sum of wins and sum of losses) for each of these hall of fame managers.– Wehaven’t quite covered this so I’ll help out. We want to use group_by() with summarize() rather than mutate(). Something like this: tbl(con, “Managers”) |&gt; select(…) |&gt; group_by(playerID) |&gt; summarize(G_managed = sum(G, na.rm = TRUE), Total_W = sum(W, na.rm = TRUE), Total_L = sum(L, na.rm = TRUE))\n• Create a new variable that is the career win/loss percentage (Total_W/G_managed). (Note: I did this after collect() otherwise the column type has to be set…)\n• Sort the resulting data by the win/loss percentage variable (from largest to smallest).\n\n\nMyMgrData &lt;- tbl(con, \"Managers\") |&gt;\n  select(playerID,G,W,L) |&gt;\n  group_by(playerID) |&gt;\n  summarize(GamesManaged = sum(G),\n    TotalWins = sum(W),\n    TotalLoss = sum(L)) |&gt;\n  collect() |&gt;\n  mutate(\"WinPercent\" = TotalWins/GamesManaged) |&gt;\n  arrange(\"WinPercent\")\n\n7. Use the results from the previous two questions to answer this one! Return information for only the people that managed a team and were inducted into the hall of fame (regardless of their category in the hall of fame- you want to return all people in the hall of fame that ever managed at all). (Just return all of the variables from both of the above two questions- 9 total columns)\n\n\nFinale &lt;- MyHOFData |&gt; \n  inner_join(MyHOFData, MyMgrData, by = \"PlayerID\")\nFinale\n\n# Source:   SQL [?? x 9]\n# Database: sqlite 3.46.0 [A:\\Personal Files\\Education\\North Carolina State University\\ST558\\Homework\\Homework03\\Homework3\\lahman.db]\n   Last_Name.x First_Name.x PlayerID  YearID.x Category.x        Last_Name.y\n   &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;        &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;      \n 1 Cobb        Ty           cobbty01      1936 Player            Cobb       \n 2 Ruth        Babe         ruthba01      1936 Player            Ruth       \n 3 Wagner      Honus        wagneho01     1936 Player            Wagner     \n 4 Mathewson   Christy      mathech01     1936 Player            Mathewson  \n 5 Johnson     Walter       johnswa01     1936 Player            Johnson    \n 6 Lajoie      Nap          lajoina01     1937 Player            Lajoie     \n 7 Speaker     Tris         speaktr01     1937 Player            Speaker    \n 8 Young       Cy           youngcy01     1937 Player            Young      \n 9 Bulkeley    Morgan       bulkemo99     1937 Pioneer/Executive Bulkeley   \n10 Johnson     Ban          johnsba99     1937 Pioneer/Executive Johnson    \n# ℹ more rows\n# ℹ 3 more variables: First_Name.y &lt;chr&gt;, YearID.y &lt;int&gt;, Category.y &lt;chr&gt;"
  },
  {
    "objectID": "HW03.html#link-repo",
    "href": "HW03.html#link-repo",
    "title": "Homework 03 – The Tidyverse",
    "section": "Link Repo",
    "text": "Link Repo\nTASK 1 - COMPLETED\n\nTASK 2 -\nREQUIRES DATA FROM:\nhttps://www4.stat.ncsu.edu/~online/datasets/glass.data (DOWNLOADED)\nhttps://www4.stat.ncsu.edu/~online/datasets/yeast.data (DOWNLOADED)\n\nTASK 3 -\nREQUIRES DATA FROM:\nhttps://www4.stat.ncsu.edu/~online/datasets/white-wine.xlsx (DOWNLOADED)\nhttps://www4.stat.ncsu.edu/~online/datasets/red-wine.csv (DOWNLOADED)\n\nTASK 4 - Lahman.db file “Connecting to Databases” notes (AVAIL)"
  }
]